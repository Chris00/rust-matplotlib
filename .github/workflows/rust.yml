name: Cargo Build & Test
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [stable, beta, nightly, linux32, macos, aarch64-ios, win64, windows-latest]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: linux32
            os: ubuntu-latest
            rust: stable
            target: i686-unknown-linux-gnu
          - build: Anaconda on Linux
            os: ubuntu-latest
            rust: stable
            target: i686-unknown-linux-gnu
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - build: aarch64-ios
            os: macos-latest
            rust: stable
            target: aarch64-apple-ios
          - build: windows-aarch64
            os: windows-latest
            rust: stable
            target: aarch64-pc-windows-msvc
          - build: win64
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: windows-latest
            os: windows-latest
            rust: stable-x86_64
            target: x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@master
    - run: git submodule init
    - run: git submodule update
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Matplotlib (pip)
      if: ${{ ! startsWith(matrix.build, 'Anaconda') }}
      run: pip install matplotlib
    - name: Install Matplotlib (Anaconda)
      if: startsWith(matrix.build, 'Anaconda')
      run: $CONDA/bin/conda install matplotlib
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - run: rustup target add ${{ matrix.target }}
    - run: cargo build --verbose
    - run: cargo test tests --verbose
    - run: cargo run --example a_simple_example
