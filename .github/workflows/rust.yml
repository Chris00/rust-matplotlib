name: Cargo Build & Test
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [stable, beta, nightly, anaconda linux, macos, anaconda macos, macos-aarch64, anaconda macos-aarch64, win64]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: anaconda linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - build: anaconda macos
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
          - build: macos-aarch64
            # Must install app https://github.com/apps/flyci-prod
            os: flyci-macos-large-latest-m1
            rust: stable
            target: aarch64-apple-darwin
          - build: anaconda macos-aarch64
            os: flyci-macos-large-latest-m1
            rust: stable
            target: aarch64-apple-darwin
          - build: win64
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@master
    - run: git submodule init
    - run: git submodule update
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
      if: ${{ ! startsWith(matrix.build, 'anaconda') }}
    - name: Install Matplotlib (pip)
      if: ${{ ! startsWith(matrix.build, 'anaconda') }}
      run: pip install matplotlib
    - name: Setup Miniconda
      if: startsWith(matrix.build, 'anaconda macos-aarch64')
      uses: conda-incubator/setup-miniconda@v3.0.3
    - name: Install Matplotlib (Anaconda)
      if: startsWith(matrix.build, 'anaconda')
      run: $CONDA/bin/conda install conda-forge::matplotlib
    - name: Install Rust (rustup)
      run: |
        rustup update --no-self-update
        rustup default ${{ matrix.rust }}-${{ matrix.target }}
    - run: cargo build -vv
      if: ${{ ! startsWith(matrix.build, 'anaconda') }}
    - run: cargo test
      if: ${{ ! startsWith(matrix.build, 'anaconda') }}
    - run: cargo run --example a_simple_example
      if: ${{ ! startsWith(matrix.build, 'anaconda') }}
    - name: Run example with Anaconda on Linux
      if: startsWith(matrix.build, 'anaconda linux')
      run: |
        eval "$($CONDA/bin/conda shell.bash activate)"
        export LD_LIBRARY_PATH=$CONDA_PREFIX/lib
        cargo run --example a_simple_example
    - name: Run example with Anaconda on MacOS
      continue-on-error: true
      if: startsWith(matrix.build, 'anaconda macos')
      run: |
        eval "$($CONDA/bin/conda shell.bash activate)"
        export DYLD_LIBRARY_PATH=$CONDA_PREFIX/lib
        cargo run --example a_simple_example
        cargo run --example flower
